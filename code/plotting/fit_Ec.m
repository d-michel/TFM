%%%%%%%%%%  EC  %%%%%%%%%%
N = [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16].';
EN = [0.668072937023358
    0.911691979719583
    2.50371874879296
    4.00866059260192
    4.89645951347292
    6.7066454036077
    7.3234950769124
    9.05150623250426
    10.3014318232767
    11.2862280908527
    12.1687739221145
    13.3044632025375
    14.1815308339654
    15.5936950548117
    16.1250280451602]./N;
Ec = 1.1;
d = abs(EN - Ec);

logd = log(d);
logN = log(N);

[fitresult, gof] = createFit(logN, logd);

figure(11)
plot(logN, logd, ".b", linewidth=1.5)
hold on
fplot(@(x) -1.362*x+0.9418,[logN(1) logN(length(logN))], linewidth=1)
xlabel( '$\log(N)$', 'Interpreter', 'latex','fontsize', 18);
ylabel( '$\log|\varepsilon-\varepsilon_c|$', 'Interpreter', 'latex','fontsize', 18);
set(gca, 'fontsize', 13)
box on

function [fitresult, gof] = createFit(logN, logd)
%CREATEFIT(LOGN,LOGD)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input: logN
%      Y Output: logd
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 24-Aug-2022 12:40:17


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( logN, logd );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft );

% Plot fit with data.
%figure(11);
%plot( fitresult, xData, yData);
% Label axes
%xlabel( '$\log(N)$', 'Interpreter', 'latex','fontsize', 18);
%ylabel( '$\log|\varepsilon-\varepsilon_c|$', 'Interpreter', 'latex','fontsize', 18);
%grid off
%hold on
end

